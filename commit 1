//GithubPopularrRepos

import {Component} from "react"
import Loader from 'react-loader-spinner'
import LanguageFilterItem from '../LanguageFilterItem'
import RepositoryItem from '../RepositoryItem'
import "./index.css"

const languageFiltersData = [
  {id: 'ALL', language: 'All'},
  {id: 'JAVASCRIPT', language: 'Javascript'},
  {id: 'RUBY', language: 'Ruby'},
  {id: 'JAVA', language: 'Java'},
  {id: 'CSS', language: 'CSS'},
]

const apiUrl = 'https://apis.ccbp.in/popular-repos?language='

class GithubPopularRepos extends Component {
    state = { 
      isLoading: true,
      repositoriesData: [],
      selectedLanguageFilter: 'ALL',
    }

    componentDidMount() {
        this.getRepositories(languageFiltersData[0].id)
    }

    setRepositories = (fetchedData, loadingStatus) => { 
        this.setState({ 
            repositoriesData: fetchedData,
            isLoading: loadingStatus,
        })
}

setIsLoading = loadingStatus => {
    this.setState({isLoading: loadingStatus})
}

getRepositories = async selectedLanguageFilter => {
    this.setIsLoading(true) 
    const response = await fetch(`${apiUrl}${selectedLanguageFilter}`) 
    const fetchedData = await response.json()
    const updatedData = fetchedData.popular_repos.map(eachRepository => ({
    id: eachRepository.id,
    imageUrl: eachRepository.avatar_url, 
    name: eachRepository.name,
    starsCount: eachRepository.stars_count,
    forksCount: eachRepository.forks_count,
    issuesCount: eachRepository.issues_count,
}))
this.setRepositories(updatedData, false)
}

renderRepositoriesList = () => {
    const {repositoriesData} = this.state

return (
  <ul className="cards-list-container">
  {repositoriesData.map(repositoryData => (
      <RepositoryItem
      key={repositoryData.id} 
      repositoryData={repositoryData}
      />
  ))}
  </ul>
)

 renderLoader = () => ( 
   <div data-testid="loader">
   <Loader color="#0284c7" height={80} type="ThreeDots" width={80} />
   </div>
 )

setSelectedLanguageFilterAndGetRepositories = newFilterId => {
    this.setState({selectedLanguageFilter: newFilterId})
    this.getRepositories(newFilterId)
}


renderLanguageFiltersList = () => {
    const {selectedLanguageFilter} = this.state

    return (
    <ul className="list-container">
    {languageFiltersData.map(eachLanguageFilter => (
    <LanguageFilterItem
    isSelected={eachLanguageFilter.id === selectedLanguageFilter} 
    key={eachLanguageFilter.id} 
    LanguageFilter={eachLanguageFilter} 
    setSelectedLanguageFilterAndGetRepositories={
    this.setSelectedLanguageFilterAndGetRepositories 
    }
    />
    ))}
    </ul>
   )
}

  render() {
    const {isLoading} = this.state
    
    return (
    <div className="container">
    <div className="popular-repositories-container">
    <h1 className="heading">Popular</h1>
    {this.renderLanguageFiltersList()}
    {isLoading ? this.renderLoader() : this.renderRepositoriesList()}
    </div>
    </div>
    )
  }
}

export default GithubPopularRepos


//LanguageFilterItem

import './index.css'

const LanguageFilterItem = props => {
  const {
    isSelected,
    languageFilter,
    setSelectedLanguageFilterAndGetRepositories,
  } = props

  const btnClassName = isSelected ? 'selected-button' : `button`

  const onClickBtnLanguageFilter = () => {
    setSelectedLanguageFilterAndGetRepositories(languageFilter.id)
  }

  return (
    <li>
      <button
        className={btnClassName}
        onClick={onClickBtnLanguageFilter}
        type="button"
      >
        {languageFilter.language}
      </button>
    </li>
  )
}

export default LanguageFilterItem


//RepositoryItem 

import './index.css'

const RepositoryItem = props => {
  const {repositoryData} = props

  return (
    <li className="container">
      <img
        className="image"
        src={repositoryData.imageUrl}
        alt={repositoryData.name}
      />
      <h1 className="heading">{repositoryData.name}</h1>
      <div className="details-container">
        <img
          src="https://assets.ccbp.in/frontend/react-js/stars-count-img.png"
          alt="stars"
          className="icon"
        />
        <p className="para">{repositoryData.starsCount} stars</p>
      </div>
      <div className="details-container">
        <img
          src="https://assets.ccbp.in/frontend/react-js/forks-count-img.png"
          alt="forks"
          className="icon"
        />
        <p className="para">{repositoryData.forksCount} forks</p>
      </div>
      <div className="details-container">
        <img
          src="https://assets.ccbp.in/frontend/react-js/issues-count-img.png"
          alt="open issues"
          className="icon"
        />
        <p className="para">{repositoryData.issuesCount} open issues</p>
      </div>
    </li>
  )
}

export default RepositoryItem


//App.js

import './App.css'

import GithubPopularReops from './components/GithubPopularReops'

const App = () => <GithubPopularReops />

export default App
